@page "/productos"
@inject IGenericService<Producto> GenericService
@inject NavigationManager NavigationManager
@inject SweetAlertService SweetAlert

<HeaderPage TitlePage="Productos"/>

@if (productos == null)
{
    <p><em>Obteniendo lista de productos...</em></p>
}
else
{
    <button class="btn btn-primary" @onclick="AgregarProducto">Agregar Nuevo Producto</button>
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nombre</th>
                <th>Precio</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var producto in productos)
            {
                <tr>
                    <td>@producto.Id</td>
                    <td>@producto.Nombre</td>
                    <td>@producto.Precio.ToString("N2")</td>
                    <td>
                        <a href="/editarproducto?IdProductoEditado=@producto.Id">Editar</a>
                    </td>
                    <td>
                        <button title="Eliminar" class="btn btn-danger" @onclick="@(()=>Eliminar(producto))">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    private List<Producto>? productos;

    protected override async Task OnInitializedAsync()
    {
        productos = await GenericService.GetAllAsync();
    }
    private void AgregarProducto()
    {
        // Redirigir a la página para agregar una nueva localidad
        NavigationManager.NavigateTo("/nuevoproducto");
    }
    private async Task Eliminar(Producto producto)
    {
        SweetAlertResult respuesta = await SweetAlert.FireAsync(new SweetAlertOptions
            {
                Title = "Borrando Producto",
                Text = $"¿Está seguro que desea borrar este producto {producto.Nombre}?",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                ConfirmButtonText = "Sí, quiero borrarlo",
                CancelButtonText = "No, esperar"
            });

        if (respuesta.IsConfirmed)
        {
            await GenericService.DeleteAsync(producto.Id);
            productos = await GenericService.GetAllAsync();
            StateHasChanged();
        }
    }
}